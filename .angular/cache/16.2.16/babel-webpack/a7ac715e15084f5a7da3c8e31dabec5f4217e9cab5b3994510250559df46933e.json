{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass FormatCepPipe {\n  transform(value) {\n    if (!value) return '';\n    const cleaned = value.replace(/\\D/g, '');\n    if (cleaned.length !== 8) return value;\n    return cleaned.replace(/(\\d{5})(\\d{3})/, '$1-$2');\n  }\n  static {\n    this.ɵfac = function FormatCepPipe_Factory(t) {\n      return new (t || FormatCepPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"formatCep\",\n      type: FormatCepPipe,\n      pure: true\n    });\n  }\n}\nexport { FormatCepPipe };","map":{"version":3,"names":["FormatCepPipe","transform","value","cleaned","replace","length","pure"],"sources":["/project/sandbox/user-workspace/src/app/pipes/format-cep.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatCep',\n})\nexport class FormatCepPipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return '';\n    const cleaned = value.replace(/\\D/g, '');\n    if (cleaned.length !== 8) return value;\n    return cleaned.replace(/(\\d{5})(\\d{3})/, '$1-$2');\n  }\n}\n"],"mappings":";AAEA,MAGaA,aAAa;EACxBC,SAASA,CAACC,KAAa;IACrB,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;IACrB,MAAMC,OAAO,GAAGD,KAAK,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IACxC,IAAID,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE,OAAOH,KAAK;IACtC,OAAOC,OAAO,CAACC,OAAO,CAAC,gBAAgB,EAAE,OAAO,CAAC;EACnD;;;uBANWJ,aAAa;IAAA;EAAA;;;;YAAbA,aAAa;MAAAM,IAAA;IAAA;EAAA;;SAAbN,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}